Anleitung f체r bisherige Netzwerkfunktionen: (stand: 17.5.2025)

-------------------------------------------------------------------------------------------------------------------------------
client.py:

Verbindungsaufbau:

1. Client einen Namen geben: client_name = "Jonas"

2. Namen der Lobby zuweisen: client_game = "NeueLobby"

3. Verbindung zu Server erstellen mit sock = clnt.connect_to_server(client_name,client_game)
   bei sock.connect(('Hier IP Adresse des Servers',65432)) die IP Adresse des Servers eingeben

Hauptschleife:

1. send_list mit "Befehlen" f체llen die gesendet werden sollen, Befehle sind aufgebaut wie z.B. ("take_from_discard_pile",True)

2. send_list an Server senden: clnt.send_to_server(sock,send_list,client_name,client_game)

3. Vom Server empfangen: received = clnt.receive_from_server(sock)

4. received enth채lt nun den Speilzustand der vom Server gesendet wurde, Zugriff mit z.B. received.get("Game Round")

--------------------------------------------------------------------------------------------------------------------------------
Server.py:

Starten:

1. Server starten mit: server = svr.start_socket()

2. Liste mit Spielen erstellen: game_list = []

3. Queue starten mit client_queue = Queue()

Hauptschleife:

1. Auf neue Verbindungen pr체fen: svr.create_client_thread(server,game_list,client_queue)

2. Die Client Queue abarbeiten bis sie leer ist mit while not client_queue.empty():

   - client_message = client_queue.get() aufrufen in der while not client_queue.empty() - Schleife
   - Falls client_message[0] == "Client info", kann mit client_message[3].get() auf die Inhalte von send_list (kommt von Client)
     zugegriffen werden, z.B client_message[2].get("take_from_discard_pile") dabei ist client_message[1] der Spielername
     und client_message[2] der Name des Spiels in dem sich der Client befindet

